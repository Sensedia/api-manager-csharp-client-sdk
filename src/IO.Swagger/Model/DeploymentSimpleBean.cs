/* 
 * API Manager Portal
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// DeploymentSimpleBean
    /// </summary>
    [DataContract]
    public partial class DeploymentSimpleBean :  IEquatable<DeploymentSimpleBean>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DeploymentSimpleBean" /> class.
        /// </summary>
        /// <param name="ApiId">ApiId.</param>
        /// <param name="ApiName">ApiName.</param>
        /// <param name="Id">Id.</param>
        /// <param name="RevisionId">RevisionId.</param>
        /// <param name="RevisionNumber">RevisionNumber.</param>
        public DeploymentSimpleBean(long? ApiId = default(long?), string ApiName = default(string), long? Id = default(long?), long? RevisionId = default(long?), int? RevisionNumber = default(int?))
        {
            this.ApiId = ApiId;
            this.ApiName = ApiName;
            this.Id = Id;
            this.RevisionId = RevisionId;
            this.RevisionNumber = RevisionNumber;
        }
        
        /// <summary>
        /// Gets or Sets ApiId
        /// </summary>
        [DataMember(Name="apiId", EmitDefaultValue=false)]
        public long? ApiId { get; set; }

        /// <summary>
        /// Gets or Sets ApiName
        /// </summary>
        [DataMember(Name="apiName", EmitDefaultValue=false)]
        public string ApiName { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public long? Id { get; set; }

        /// <summary>
        /// Gets or Sets RevisionId
        /// </summary>
        [DataMember(Name="revisionId", EmitDefaultValue=false)]
        public long? RevisionId { get; set; }

        /// <summary>
        /// Gets or Sets RevisionNumber
        /// </summary>
        [DataMember(Name="revisionNumber", EmitDefaultValue=false)]
        public int? RevisionNumber { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DeploymentSimpleBean {\n");
            sb.Append("  ApiId: ").Append(ApiId).Append("\n");
            sb.Append("  ApiName: ").Append(ApiName).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  RevisionId: ").Append(RevisionId).Append("\n");
            sb.Append("  RevisionNumber: ").Append(RevisionNumber).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as DeploymentSimpleBean);
        }

        /// <summary>
        /// Returns true if DeploymentSimpleBean instances are equal
        /// </summary>
        /// <param name="other">Instance of DeploymentSimpleBean to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DeploymentSimpleBean other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.ApiId == other.ApiId ||
                    this.ApiId != null &&
                    this.ApiId.Equals(other.ApiId)
                ) && 
                (
                    this.ApiName == other.ApiName ||
                    this.ApiName != null &&
                    this.ApiName.Equals(other.ApiName)
                ) && 
                (
                    this.Id == other.Id ||
                    this.Id != null &&
                    this.Id.Equals(other.Id)
                ) && 
                (
                    this.RevisionId == other.RevisionId ||
                    this.RevisionId != null &&
                    this.RevisionId.Equals(other.RevisionId)
                ) && 
                (
                    this.RevisionNumber == other.RevisionNumber ||
                    this.RevisionNumber != null &&
                    this.RevisionNumber.Equals(other.RevisionNumber)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.ApiId != null)
                    hash = hash * 59 + this.ApiId.GetHashCode();
                if (this.ApiName != null)
                    hash = hash * 59 + this.ApiName.GetHashCode();
                if (this.Id != null)
                    hash = hash * 59 + this.Id.GetHashCode();
                if (this.RevisionId != null)
                    hash = hash * 59 + this.RevisionId.GetHashCode();
                if (this.RevisionNumber != null)
                    hash = hash * 59 + this.RevisionNumber.GetHashCode();
                return hash;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
