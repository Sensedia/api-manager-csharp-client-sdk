/* 
 * API Manager Portal
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing MetricsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class MetricsApiTests
    {
        private MetricsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new MetricsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of MetricsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' MetricsApi
            //Assert.IsInstanceOfType(typeof(MetricsApi), instance, "instance is a MetricsApi");
        }

        
        /// <summary>
        /// Test FindHealthUsingGET1
        /// </summary>
        [Test]
        public void FindHealthUsingGET1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string sensediaAuth = null;
            //bool? healthPortal = null;
            //var response = instance.FindHealthUsingGET1(sensediaAuth, healthPortal);
            //Assert.IsInstanceOf<List<OperationHealth>> (response, "response is List<OperationHealth>");
        }
        
        /// <summary>
        /// Test FindTopAccessTokensUsingGET1
        /// </summary>
        [Test]
        public void FindTopAccessTokensUsingGET1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? howMany = null;
            //string sensediaAuth = null;
            //string beginDate = null;
            //string endDate = null;
            //string status = null;
            //string resolution = null;
            //var response = instance.FindTopAccessTokensUsingGET1(howMany, sensediaAuth, beginDate, endDate, status, resolution);
            //Assert.IsInstanceOf<List<TopAccessToken>> (response, "response is List<TopAccessToken>");
        }
        
        /// <summary>
        /// Test FindTopAppsUsingGET1
        /// </summary>
        [Test]
        public void FindTopAppsUsingGET1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? howMany = null;
            //string sensediaAuth = null;
            //string beginDate = null;
            //string endDate = null;
            //string status = null;
            //string resolution = null;
            //var response = instance.FindTopAppsUsingGET1(howMany, sensediaAuth, beginDate, endDate, status, resolution);
            //Assert.IsInstanceOf<List<TopApp>> (response, "response is List<TopApp>");
        }
        
        /// <summary>
        /// Test GetAccessTokensByMonthUsingGET1
        /// </summary>
        [Test]
        public void GetAccessTokensByMonthUsingGET1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string sensediaAuth = null;
            //string beginDate = null;
            //string endDate = null;
            //string resolution = null;
            //var response = instance.GetAccessTokensByMonthUsingGET1(sensediaAuth, beginDate, endDate, resolution);
            //Assert.IsInstanceOf<List<TokensMetric>> (response, "response is List<TokensMetric>");
        }
        
        /// <summary>
        /// Test GetAppsByMonthUsingGET1
        /// </summary>
        [Test]
        public void GetAppsByMonthUsingGET1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string sensediaAuth = null;
            //string beginDate = null;
            //string endDate = null;
            //string resolution = null;
            //var response = instance.GetAppsByMonthUsingGET1(sensediaAuth, beginDate, endDate, resolution);
            //Assert.IsInstanceOf<List<TokensMetric>> (response, "response is List<TokensMetric>");
        }
        
        /// <summary>
        /// Test GetCacheLatencyUsingGET1
        /// </summary>
        [Test]
        public void GetCacheLatencyUsingGET1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string sensediaAuth = null;
            //long? apiId = null;
            //long? revisionId = null;
            //long? operationId = null;
            //long? environmentId = null;
            //string beginDate = null;
            //string endDate = null;
            //string resolution = null;
            //var response = instance.GetCacheLatencyUsingGET1(sensediaAuth, apiId, revisionId, operationId, environmentId, beginDate, endDate, resolution);
            //Assert.IsInstanceOf<List<OperationMetric>> (response, "response is List<OperationMetric>");
        }
        
        /// <summary>
        /// Test GetCacheSizeUsingGET1
        /// </summary>
        [Test]
        public void GetCacheSizeUsingGET1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string sensediaAuth = null;
            //long? apiId = null;
            //long? revisionId = null;
            //long? operationId = null;
            //long? environmentId = null;
            //var response = instance.GetCacheSizeUsingGET1(sensediaAuth, apiId, revisionId, operationId, environmentId);
            //Assert.IsInstanceOf<CacheMetric> (response, "response is CacheMetric");
        }
        
        /// <summary>
        /// Test GetCacheUsingGET1
        /// </summary>
        [Test]
        public void GetCacheUsingGET1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string sensediaAuth = null;
            //long? apiId = null;
            //long? revisionId = null;
            //long? operationId = null;
            //long? environmentId = null;
            //string beginDate = null;
            //string endDate = null;
            //string resolution = null;
            //var response = instance.GetCacheUsingGET1(sensediaAuth, apiId, revisionId, operationId, environmentId, beginDate, endDate, resolution);
            //Assert.IsInstanceOf<List<OperationMetric>> (response, "response is List<OperationMetric>");
        }
        
        /// <summary>
        /// Test GetCallsByMonthUsingGET1
        /// </summary>
        [Test]
        public void GetCallsByMonthUsingGET1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string sensediaAuth = null;
            //string beginDate = null;
            //string endDate = null;
            //string resolution = null;
            //long? environmentId = null;
            //long? apiId = null;
            //long? revisionId = null;
            //var response = instance.GetCallsByMonthUsingGET1(sensediaAuth, beginDate, endDate, resolution, environmentId, apiId, revisionId);
            //Assert.IsInstanceOf<List<CallsMetric>> (response, "response is List<CallsMetric>");
        }
        
        /// <summary>
        /// Test GetLatencyByMonthUsingGET1
        /// </summary>
        [Test]
        public void GetLatencyByMonthUsingGET1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string sensediaAuth = null;
            //string beginDate = null;
            //string endDate = null;
            //string resolution = null;
            //var response = instance.GetLatencyByMonthUsingGET1(sensediaAuth, beginDate, endDate, resolution);
            //Assert.IsInstanceOf<List<LatencyMetric>> (response, "response is List<LatencyMetric>");
        }
        
        /// <summary>
        /// Test GetStatusErrorUsingGET1
        /// </summary>
        [Test]
        public void GetStatusErrorUsingGET1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string sensediaAuth = null;
            //var response = instance.GetStatusErrorUsingGET1(sensediaAuth);
            //Assert.IsInstanceOf<int?> (response, "response is int?");
        }
        
    }

}
