/* 
 * API Manager Portal
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing DevelopersApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class DevelopersApiTests
    {
        private DevelopersApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new DevelopersApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DevelopersApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' DevelopersApi
            //Assert.IsInstanceOfType(typeof(DevelopersApi), instance, "instance is a DevelopersApi");
        }

        
        /// <summary>
        /// Test CountUsingGET12
        /// </summary>
        [Test]
        public void CountUsingGET12Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string sensediaAuth = null;
            //var response = instance.CountUsingGET12(sensediaAuth);
            //Assert.IsInstanceOf<long?> (response, "response is long?");
        }
        
        /// <summary>
        /// Test RemoveUserAccountUsingDELETE1
        /// </summary>
        [Test]
        public void RemoveUserAccountUsingDELETE1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string login = null;
            //string sensediaAuth = null;
            //instance.RemoveUserAccountUsingDELETE1(login, sensediaAuth);
            
        }
        
        /// <summary>
        /// Test RetieveUserAccountUsingGET1
        /// </summary>
        [Test]
        public void RetieveUserAccountUsingGET1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string login = null;
            //string sensediaAuth = null;
            //var response = instance.RetieveUserAccountUsingGET1(login, sensediaAuth);
            //Assert.IsInstanceOf<Developer> (response, "response is Developer");
        }
        
        /// <summary>
        /// Test RetrieveAccountChangeLogUsingGET1
        /// </summary>
        [Test]
        public void RetrieveAccountChangeLogUsingGET1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string username = null;
            //string sensediaAuth = null;
            //var response = instance.RetrieveAccountChangeLogUsingGET1(username, sensediaAuth);
            //Assert.IsInstanceOf<List<ChangeLogBean>> (response, "response is List<ChangeLogBean>");
        }
        
        /// <summary>
        /// Test RetrieveUserAccountsUsingGET1
        /// </summary>
        [Test]
        public void RetrieveUserAccountsUsingGET1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string sensediaAuth = null;
            //string loginOrEmail = null;
            //string name = null;
            //string email = null;
            //int? actualPage = null;
            //int? pageSize = null;
            //var response = instance.RetrieveUserAccountsUsingGET1(sensediaAuth, loginOrEmail, name, email, actualPage, pageSize);
            //Assert.IsInstanceOf<List<Developer>> (response, "response is List<Developer>");
        }
        
        /// <summary>
        /// Test SaveUserAccountUsingPUT1
        /// </summary>
        [Test]
        public void SaveUserAccountUsingPUT1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string login = null;
            //Developer bean = null;
            //string sensediaAuth = null;
            //var response = instance.SaveUserAccountUsingPUT1(login, bean, sensediaAuth);
            //Assert.IsInstanceOf<Developer> (response, "response is Developer");
        }
        
    }

}
